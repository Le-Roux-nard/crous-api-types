{"version":3,"file":"Utils.js","sourceRoot":"","sources":["../src/Utils.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,IAAI,CAAuB,GAAM,EAAE,GAAG,IAAS;IAC9D,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAgB,CAAC,CAAC;AACtE,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,MAAW,EAAE,WAAmB;IAC1D,IAAI,IAAI,GAAa,OAAO,CAAC,WAAW,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;IAEpE,IAAI,IAAI,EAAE;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACvB;SAAM;QACN,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC;QACrB,OAAO,CAAC,cAAc,CAAC,iBAAiB,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;KACxD;AACF,CAAC","sourcesContent":["export function pick<T, K extends keyof T>(obj: T, ...keys: K[]): Pick<T, K> {\r\n\treturn keys.reduce((o, k) => ((o[k] = obj[k]), o), {} as Pick<T, K>);\r\n}\r\n\r\nexport function keepToJson(target: any, propertyKey: string) {\r\n\tlet keys: string[] = Reflect.getMetadata(\"crous:json-keys\", target);\r\n\r\n\tif (keys) {\r\n\t\tkeys.push(propertyKey);\r\n\t} else {\r\n\t\tkeys = [propertyKey];\r\n\t\tReflect.defineMetadata(\"crous:json-keys\", keys, target);\r\n\t}\r\n}"]}